generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id                 Int        @id @default(autoincrement())
  name               String     @unique
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  departingShipments Shipment[] @relation("DepartureCity")
  arrivingShipments  Shipment[] @relation("ArrivalCity")
}

model Agency {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  shipments Shipment[]
}

model Vehicle {
  id            Int        @id @default(autoincrement())
  vehicleNumber String     @unique
  shipments     Shipment[]
  tripLogs      TripLog[]
}

model Party {
  id                Int        @id @default(autoincrement())
  name              String
  contactInfo       String
  opening_balance   Decimal
  receivedShipments Shipment[] @relation("ReceiverParty")
  sentShipments     Shipment[] @relation("SenderParty")
}

model ItemCatalog {
  id               Int            @id @default(autoincrement())
  item_description String         @unique
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  goodsDetails     GoodsDetails[]
}

model GoodsDetails {
  good_detail_id   Int         @id @default(autoincrement())
  shipment_id      String
  item_name_id     Int
  quantity         Int
  charges          Decimal     @default(0.00)
  delivery_charges Decimal     @default(0.00)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  itemCatalog      ItemCatalog @relation(fields: [item_name_id], references: [id])
  shipment         Shipment    @relation(fields: [shipment_id], references: [register_number], onDelete: Cascade)

  @@map("Goods_Details")
}

model Transaction {
  transaction_id   Int      @id @default(autoincrement())
  transaction_date DateTime @default(now())
  party_type       String
  party_ref_id     Int
  shipment_id      String
  credit_amount    Decimal
  debit_amount     Decimal
  description      String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  shipment         Shipment @relation(fields: [shipment_id], references: [register_number])

  @@map("Transactions")
}

model Shipment {
  register_number        String         @id
  bility_number          String         @unique
  bility_date            DateTime
  departure_city_id      Int
  to_city_id             Int?
  forwarding_agency_id   Int
  vehicle_number_id      Int
  sender_id              Int
  receiver_id            Int
  walk_in_sender_name    String?
  walk_in_receiver_name  String?
  total_charges          Decimal
  delivery_date          DateTime?
  remarks                String?
  total_delivery_charges Decimal        @default(0.00)
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  deliveries             Delivery[]
  goodsDetails           GoodsDetails[]
  departureCity          City           @relation("DepartureCity", fields: [departure_city_id], references: [id])
  forwardingAgency       Agency         @relation(fields: [forwarding_agency_id], references: [id])
  receiver               Party          @relation("ReceiverParty", fields: [receiver_id], references: [id])
  sender                 Party          @relation("SenderParty", fields: [sender_id], references: [id])
  toCity                 City?          @relation("ArrivalCity", fields: [to_city_id], references: [id])
  vehicle                Vehicle        @relation(fields: [vehicle_number_id], references: [id])
  transactions           Transaction[]
}

model TripLog {
  id                   Int               @id @default(autoincrement())
  vehicle_id           Int
  driver_name          String
  driver_mobile        String
  station_name         String
  city                 String
  date                 DateTime
  arrival_time         String
  departure_time       String
  total_fare_collected Decimal
  delivery_cut         Decimal
  commission           Decimal
  arrears              Decimal
  cuts                 Decimal           @default(0.00)
  munsihna_reward      Decimal           @default(0.00)
  distant_charges      Decimal           @default(0.00)
  accountant_charges   Decimal           @default(0.00)
  received_amount      Decimal
  note                 String?
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  vehicle              Vehicle           @relation(fields: [vehicle_id], references: [id])
  shipmentLogs         TripShipmentLog[]

  @@map("Trip_Log")
}

model TripShipmentLog {
  id               Int      @id @default(autoincrement())
  trip_log_id      Int
  bilty_number     String
  serial_number    Int
  receiver_name    String
  item_details     String
  quantity         Int
  delivery_charges Decimal
  createdAt        DateTime @default(now())
  tripLog          TripLog  @relation(fields: [trip_log_id], references: [id])

  @@unique([trip_log_id, bilty_number])
  @@map("Trip_Shipment_Log")
}

model Delivery {
  delivery_id      Int       @id @default(autoincrement())
  shipment_id      String
  delivery_date    DateTime
  delivery_time    DateTime?
  station_expense  Decimal   @default(0.00)
  bility_expense   Decimal   @default(0.00)
  station_labour   Decimal   @default(0.00)
  cart_labour      Decimal   @default(0.00)
  total_expenses   Decimal   @default(0.00)
  receiver_name    String
  receiver_phone   String
  receiver_cnic    String
  receiver_address String
  delivery_notes   String?
  delivery_status  String    @default("DELIVERED")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  shipment         Shipment  @relation(fields: [shipment_id], references: [register_number])

  @@map("Delivery")
}
